version: '3'

services:
  postgres:
    image: postgres:11.19-alpine
    restart: always
    env_file: .env
    container_name: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD

  redis:
    container_name: redis
    image: redis:7.2-rc1-alpine
    restart: unless-stopped
    ports:
      - "6378:6379"
  asgiserver:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: asgiserver
    command: daphne main.asgi:application -b 0.0.0.0 -p 9000
    env_file:
      - .env
    volumes:
      - ./project:/usr/src/app/
    links:
      - postgres
      - redis
    expose:
      - 9000

  wsgiserver:
    build: ./wsgiserver
    restart: always
    command: gunicorn main.wsgi:application --bind 0.0.0.0:8000
    env_file: .env
    container_name: web
    volumes:
      - ./project:/usr/src/app/
    expose:
      - 8000
    environment:
      - ALLOWED_HOSTS=$ALLOWED_HOSTS
      - SECRET_KEY=$SECRET_KEY
      - DEBUG=$DEBUG
      - POSTGRES_NAME=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_PORT=$POSTGRES_PORT
      - POSTGRES_HOST=$POSTGRES_HOST
    depends_on:
      - postgres

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    volumes:
      - ./project/static:/usr/src/app/static
      # - media_volume:/usr/src/app/media
    ports:
      - "80:80"
    depends_on:
      - wsgiserver
      - asgiserver